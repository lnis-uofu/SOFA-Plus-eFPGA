/* Generated by Yosys 0.9+2406 (git sha1 f44a4f90, gcc 8.4.0 -fPIC -Os) */

module top(clk, reset, enable, \count[0] , \count[1] , \count[2] , \count[3] , \count[4] , \count[5] , \count[6] , \count[7] , \count[8] , \count[9] , \count[10] , \count[11] , \count[12] , \count[13] , \count[14] , \count[15] );
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  input clk;
  output \count[0] ;
  output \count[10] ;
  output \count[11] ;
  output \count[12] ;
  output \count[13] ;
  output \count[14] ;
  output \count[15] ;
  output \count[1] ;
  output \count[2] ;
  output \count[3] ;
  output \count[4] ;
  output \count[5] ;
  output \count[6] ;
  output \count[7] ;
  output \count[8] ;
  output \count[9] ;
  input enable;
  input reset;
  dff _29_ (
    .C(clk),
    .D(_00_),
    .Q(\count[0] )
  );
  dff _30_ (
    .C(clk),
    .D(_07_),
    .Q(\count[1] )
  );
  dff _31_ (
    .C(clk),
    .D(_08_),
    .Q(\count[2] )
  );
  dff _32_ (
    .C(clk),
    .D(_09_),
    .Q(\count[3] )
  );
  dff _33_ (
    .C(clk),
    .D(_10_),
    .Q(\count[4] )
  );
  dff _34_ (
    .C(clk),
    .D(_11_),
    .Q(\count[5] )
  );
  dff _35_ (
    .C(clk),
    .D(_12_),
    .Q(\count[6] )
  );
  dff _36_ (
    .C(clk),
    .D(_13_),
    .Q(\count[7] )
  );
  dff _37_ (
    .C(clk),
    .D(_14_),
    .Q(\count[8] )
  );
  dff _38_ (
    .C(clk),
    .D(_15_),
    .Q(\count[9] )
  );
  dff _39_ (
    .C(clk),
    .D(_01_),
    .Q(\count[10] )
  );
  dff _40_ (
    .C(clk),
    .D(_02_),
    .Q(\count[11] )
  );
  dff _41_ (
    .C(clk),
    .D(_03_),
    .Q(\count[12] )
  );
  dff _42_ (
    .C(clk),
    .D(_04_),
    .Q(\count[13] )
  );
  dff _43_ (
    .C(clk),
    .D(_05_),
    .Q(\count[14] )
  );
  dff _44_ (
    .C(clk),
    .D(_06_),
    .Q(\count[15] )
  );
  assign _00_ = 8'h06 >> { reset, \count[0] , enable };
  assign _12_ = 16'h1222 >> { _18_, \count[5] , reset, \count[6]  };
  assign _13_ = 8'h06 >> { reset, _19_, \count[7]  };
  assign _19_ = 16'h8000 >> { _17_, _20_, \count[3] , \count[4]  };
  assign _20_ = 4'h8 >> { \count[5] , \count[6]  };
  assign _14_ = 8'h06 >> { reset, _21_, \count[8]  };
  assign _21_ = 4'h8 >> { _19_, \count[7]  };
  assign _15_ = 16'h1222 >> { _21_, \count[8] , reset, \count[9]  };
  assign _01_ = 8'h06 >> { reset, _22_, \count[10]  };
  assign _22_ = 16'h8000 >> { _19_, \count[7] , \count[8] , \count[9]  };
  assign _02_ = 8'h06 >> { reset, _23_, \count[11]  };
  assign _07_ = 16'h1222 >> { \count[0] , enable, reset, \count[1]  };
  assign _23_ = 4'h8 >> { _22_, \count[10]  };
  assign _03_ = 16'h1222 >> { _23_, \count[11] , reset, \count[12]  };
  assign _04_ = 8'h06 >> { reset, _24_, \count[13]  };
  assign _24_ = 16'h8000 >> { _22_, \count[10] , \count[11] , \count[12]  };
  assign _05_ = 16'h1222 >> { _24_, \count[13] , reset, \count[14]  };
  assign _06_ = 8'h06 >> { reset, _25_, \count[15]  };
  assign _25_ = 8'h80 >> { _24_, \count[13] , \count[14]  };
  assign _08_ = 8'h06 >> { reset, _16_, \count[2]  };
  assign _16_ = 8'h80 >> { \count[0] , enable, \count[1]  };
  assign _09_ = 8'h06 >> { reset, _17_, \count[3]  };
  assign _17_ = 16'h8000 >> { \count[0] , enable, \count[1] , \count[2]  };
  assign _10_ = 16'h1222 >> { _17_, \count[3] , reset, \count[4]  };
  assign _11_ = 8'h06 >> { reset, _18_, \count[5]  };
  assign _18_ = 8'h80 >> { _17_, \count[3] , \count[4]  };
  assign _26_ = 1'h0;
  assign _27_ = 1'h1;
  assign _28_ = 1'hx;
endmodule
